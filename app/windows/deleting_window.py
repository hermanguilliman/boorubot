from aiogram import F
from aiogram.enums import ContentType, ParseMode
from aiogram_dialog import StartMode, Window
from aiogram_dialog.widgets.input import MessageInput
from aiogram_dialog.widgets.kbd import ScrollingGroup, Select, Start
from aiogram_dialog.widgets.text import Const, Format

from app.callbacks.delete_subscribe import on_subscribing_deleted
from app.getters.subscribes_selector import get_subscribes
from app.handlers.subscribes import search_subscribes
from app.states.danmenu import DanMenu

deleting_window = Window(
    # –ï—Å–ª–∏ –Ω–µ –∑–∞–¥–∞–Ω –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∏ –µ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏
    Const(
        "<b>üìñ –ü–µ—Ä–µ–¥ –≤–∞–º–∏ –≤—Å–µ –∏–º–µ—é—â–∏–µ—Å—è –ø–æ–¥–ø–∏—Å–∫–∏</b>\n",
        when=~F["dialog_data"]["search_query"] & F["subscriptions"],
    ),
    # –ï—Å–ª–∏ –∑–∞–¥–∞–Ω –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∏ –µ—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞
    Format(
        "<b>üîé –ü–µ—Ä–µ–¥ –≤–∞–º–∏ –≤—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É: {dialog_data[search_query]}</b>\n",
        when=F["dialog_data"]["search_query"] & F["subscriptions"],
    ),
    # –ï—Å–ª–∏ –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤, –Ω–æ –Ω–µ—Ç –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    Const(
        "<b>üëá –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å, –ª–∏–±–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏</b>",
        when=F["subscriptions"] & ~F["dialog_data"]["search_query"],
    ),
    # –ï—Å–ª–∏ –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ –ø–æ–∏—Å–∫–æ–≤–æ–º—É –∑–∞–ø—Ä–æ—Å—É
    Const(
        "<b>üëá –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å, –ª–∏–±–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥–æ–π –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å</b>",
        when=F["subscriptions"] & F["dialog_data"]["search_query"],
    ),
    # –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å, –Ω–æ –Ω–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    Const(
        "<b>üîé –ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</b>",
        when=~F["subscriptions"] & F["dialog_data"]["search_query"],
    ),
    # –ï—Å–ª–∏ –Ω–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏ –Ω–µ—Ç –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    Const(
        "<b>ü§∑ –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –ø–æ–¥–ø–∏—Å–æ–∫</b>",
        when=~F["subscriptions"] & ~F["dialog_data"]["search_query"],
    ),
    MessageInput(search_subscribes, content_types=[ContentType.TEXT]),
    ScrollingGroup(
        Select(
            Format("{item[1]}"),  # –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ ‚Äî —Ç–µ–≥ –ø–æ–¥–ø–∏—Å–∫–∏
            items="subscriptions",  # –°–ø–∏—Å–æ–∫ –∫–æ—Ä—Ç–µ–∂–µ–π (id, tag)
            item_id_getter=lambda x: x[0],  # ID –∫–∞–∫ callback_data
            id="select_subscriptions",
            on_click=on_subscribing_deleted,
        ),
        width=2,
        height=10,
        id="scrolling_tags",
        when="subscriptions",  # –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å, –µ—Å–ª–∏ –µ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏
    ),
    Start(
        Const("üëà –ù–∞–∑–∞–¥"),
        id="restart",
        state=DanMenu.main,
        mode=StartMode.NORMAL,
    ),
    getter=get_subscribes,
    state=DanMenu.delete,
    parse_mode=ParseMode.HTML,
)
